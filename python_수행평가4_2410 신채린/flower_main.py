# 2410 신채린
# 꽃내음이라는 프로그램. 꽃과 관련된 모든 정보를 알 수 있는 프로그램이다.
# 계절별 꽃의 관련되어 기본 정보도 알 수 있고, 월별 꽃축제와 꽃과 관련된 이야기를 볼 수도 있다.
# 정보를 다 본 이후에는, 꽃게임과 꽃퀴즈로 재미도 즐길 수 있다.
# 메인 프로그램 - 실행해야하는 프로그램.

from festivalList import FestList # 파일처리 페이지와 import
import random

def select_menu(): #메인 화면을 보여주는 함수
    num = int(input("안녕하세요-! 꽃내음입니다. 원하시는 메뉴를 선택해 주세요-!!(프로그램을 종료하고 싶다면, 6을 눌러주세요.)\n 1.계절별 꽃 종류 2.꽃축제 3.꽃이야기 4.꽃게임 5.꽃퀴즈 : "))
    if num==1: # 1을 눌렀을 때 계절별 꽃 종류를 보여주는 함수로 들어간다.
        flower_kind() # 계절별 꽃 종류를 보여준다.
    elif num==2: # 2를 눌렀을 때 월별 꽃 축제를 보여주는 함수로 들어간다.
        flower_festival() # 월별 꽃 축제를 보여준다.
    elif num==3: # 3을 눌렀을 때 꽃 이야기를 보여주는 함수로 들어간다.
        flower_story() # 꽃 이야기를 보여준다.
    elif num==4: # 4를 눌렀을 때 꽃 게임을 보여주는 함수로 들어간다.
        flower_game() # 꽃 게임을 보여준다.
    elif num==5: # 5를 눌렀을 때 꽃 퀴즈를 보여주는 함수로 들어간다.
        flower_quiz() # 꽃 퀴즈를 보여준다. - 패키지로 분리
    elif num==6: # 6을 눌렀을 때 프로그램이 끝난다.
        print("프로그램을 종료합니다")
        exit
def flower_kind(): #메인 메뉴에서 1을 눌렀을 때 들어오는 계절별 꽃 종류 함수
    dict_Kind = { # 딕셔너리로 각 계절에 어떤 꽃이 있는지 value 값 지정
        # 숫자가 아닌 직접 봄, 여름, 가을, 겨울 등으로 입력할 수 있게 지정해서 사용자 입장에서 더욱 확실하게 하였따.
        # 계절을 선택한 이후-> 계절에 맞는 꽃 종류가 나온다.
        "봄": ["벚꽃", "철쭉", "금잔화"],
        "여름": ["달리아", "산하엽", "호야꽃"],
        "가을": ["해홍두", "샐비어"],
        "겨울": ["산다화", "동백", "매화"]
    }
    dict_flower = { # 계절에 맞는 꽃 종류를 선택한 이후->그 꽃에 대한 자세한 정보가 나온다.
        "벚꽃": ["벚나무의 꽃", "꽃잎색: 분홍색, 하얀색", "꽃말: '삶의 덧없음과 아름다움'", "개화시기: 4월 초~ 중순", "특징1: 분홍빛과 연분홍빛이 살짝 감도는 흰색의 꽃.",
               "특징2: 꽃잎 5장이 방사형으로 펼쳐져 있다.", "특징3: 붉은 수술대 여러 개가 꽃 중심에 모여있다.", "특징4: 꽃가지가 무리지어서 나는 특성을 가지고 있다."],
        "철쭉": ["개꽃나무(낙엽관목)", "꽃잎색: 하얀색, 분홍색, 붉은색", "꽃말: '자제, 사랑의 즐거움'", "개화시기: 5월", "특징1: 꽃에 독이 있다.",
               "특징2: 개꽃이라고 불리기도 한다.", "특징3: 수술의 수가 10개이다.", "특징4: 약성이 있어서 독성을 제거하면 약재로도 사용한다."],
        "금잔화": ["국화과의 한해살이풀", "꽃잎색: 주황색, 노랑색(황색계통)", "꽃말: '이별의 슬픔, 비탄, 실망, 비애, 인내'", "개화시기: 3월~5월",
                "특징1: 씨뿌리는 시기를 조절하여 연중 꽃을 피게 할 수도 있다.", "특징2: 높은 기온과 가뭄에 약하다.", "특징3: 높이가 30cm~50cm이다.",
                "특징4: 가지가 갈라지며 전체에 선모 같은 털이 있어 독특한 냄새를 풍긴다.", "특징5: 밤에는 오므라든다"],
        "달리아": ["국화과의 꽃", "꽃잎색: 다양한 색", "꽃말: '당신의 마음을 알아 기쁩니다.'", "개화시기: 7월", "특징1: 품종에 따라 꽃의 형태와 화색이 매우 다양하다.",
                "특징2: 두상화의 지름이 5~7.5cm정도로 피운다.", "특징3: 구근에는 독이 있으니 주의해야 한다."],
        "산하엽": ["스켈레톤 플라워", "꽃잎색: 하얀색", "꽃말: '친애의 정, 행복'", "개화시기: 5월~7월",
                "특징1: 세포의 바깥 쪽이 공기에 노출되어 있는 구조의 꽃잎이여서 물에 젖으면 빛의 투과율을 높여 꽃잎이 투명하게 변해 크리스탈꽃이라고 불린다.",
                "특징2: 물기가 마르면 하얀색으로 돌아온다.", "특징3: 습하고 수풀이 우거진 산비탈에 서식한다."],
        "호야꽃": ["덩굴다육식물", "꽃잎색: 미황색", "꽃말: '고독한 사랑, 아름다운 사랑'", "개화시기: 6월~9월", "특징1: 공을 반으로 잘라 놓은 듯하 형태의 꽃이 별모양으로 모여있다.",
                "특징2: 잎은 다육질이고 난형으로 마주납니다.", "특징3: 꽃은 하얗지만 중심이 연분홍색이 작은 별모양의 꽃들이 덩어리를 지고 있다.", "특징4: 진한 향기가 난다."],
        "해홍두": ["콩과 산호식물", "꽃잎색: 붉은색", "꽃말: '꿈, 활력'", "개화시기: 9월", "특징1: 통증을 막아주는 효과를 가지고 있다.", "특징2: 우루과이 국화이다.",
                "특징3: 태양빛을 좋아한다."],
        "샐비어": ["꿀풀과의 여러해살이풀", "꽃잎색: 자색", "꽃말: '지혜, 정성, 정렬'", "개화시기: 5월~10월", "특징1: 높이는 50cm~80cm이다.",
                      "특징2: 줄기는 네모지고 기부는 목질화하였다.", "특징3: 잎은 마주나며, 타원형 또는 피침혀으로 두껍고 윗 면에 잔주름이 있으며 녹백색이다.",
                      "특징4: 꿀이 있다."],
        "산다화": ["차나무과", "꽃잎색: 진한 분홍색", "꽃말: '겸손, 이상적인 사랑'", "개화시기: 늦가을~초겨울",
                "특징1: 동백과 거의 같은 외모를 가지고 있어 애기동백, 초겨울에 피어서 서리동백이라고 불린다.", "특징2: 종자에서 기름을 짜면 한방에서 옴 치료제로 쓰이다.",
                "특징3: 잎은 톱니모양이 규칙적으로 배열되어 있다.", "특징4: 꽃잎이 한 장식 떨어진다."],
        "동백": ["차나무과", "꽃잎색: 다양한 색", "꽃말: '당신을 열렬히 사랑합니다'", "개화시기: 2월 초", "특징1: 11월 말부터 피우기 시작해서 2~3월에서 만개한다.",
               "특징2: 조매화의 특징인 꿀이 많다.", "특징3: 아열대기후가 아니면 볼 수 없는 꽃이다.", "특징4: 꽃이 질 때 전부 붙은 채로 한 송이씩 떨어진다."],
        "매화": ["장미과 벚나무속 낙엽활엽수", "꽃잎색: 붉은색(홍매), 흰색(백매)", "꽃말: '고결한 마음, 기품, 결백'", "개화시기: 1월~3월", "특징1: 매실열매가 자란다.",
               "특징2: 꽃을 매화라고도 부르는데, 사군자 중 한 가지다.", "특징3: 향기가 강하다.", "특징4: 바람이 불면 흰 꽃잎이 날리듯 떨어져서 벚꽃과 착각을 일으킨다."]
    }
    while True: # 메인함수로 돌아가거나, 자신이 선택한 메뉴를 다시 선택해서 보거나.
        key = input("계절별 꽃을 알아볼 수 있는 메뉴입니다-!! 알고싶은 계절을 입력해주세요!! : ")
        for i in dict_Kind[key]:
            print(i, end="\n")
        key2 = input("자세히 알아보고 싶은 꽃의 이름을 적어주세요 : ")
        for j in dict_flower[key2]:
            print(j, end="\n")
        num = int(input("다른 계절도 알아보시겠습니까? 0 : NO 1 : YES"))
        if num == 1:
            continue
        else:
            returnMain()
def flower_festival():
    # 파일처리 - 축제리스트를 확인하고, 자신이 기억하고(저장하고) 싶은 축제를 따로 파일처리할 수 있다.
    dict_festival = {
        "1월": ["신안군 애기동백 겨울꽃 축제", "허브 아일랜드 자스민 로즈마리 축제"],
        "2월": ["제주 한림공원 수선화 축제", "제주 한림공원 매화 축제"],
        "3월": ["구레 산수유 축제", "가평 한반도 야생화전", "화개장터 벚꽃 축제", "동강 할미꽃 축제"],
        "4월": ["서울 응봉산 개나리 축제", "고양 중남미문학원 목련 축제", "군위 사과꽃축제", "강릉 복사꽃 축제", "금산 홍도화 축제", "김천 자두꽃 페스티벌"],
        "5월": ["참꽃 축제", "산청군 생초함박꽃축제", "관악산 철쭉 축제", "비슬산 산꽃 축제", "칠곡 아카시아꽃축제", "포항 홍해 이팝꽃축제", "태안 장미백합축제", "팜카밀레 허브축제"],
        "6월": ["원주 장미 축제", "가평군 아이리스 축제", "공주 정안 밤꽃 축제", "고성 라벤더 축제", "태백산 유채꽃 축제"],
        "7월": ["김제시 하소 백련 축제", "아침고요수목원 무궁화 축제", "순창 도라지 축제"],
        "8월": ["봉원사 연꽃 축제", "태백산 해바라기 축제", "현충원 나라꽃 무궁화 축제", "고양시 경기 선인장 페스티벌"],
        "9월": ["하동 북천 메밀꽃 코스모스 축제", "불갑산 상사화 축제", "민둥산 억새꽃 축제", "횡성 우천 코스모스 축제"],
        "10월": ["정읍 옥정호 구절초 축제", "영평사 구절초 축제", "태안 팜카밀레 국화 세이지 축제"],
        "11월": ["조계사 국화 향기 나눔전", "거제섬 꽃 축제"],
        "12월": ["남산골 얼음꽃 축제", "신안군 애기동백겨울꽃 축제"]
    }

    while True:  # 메인함수로 돌아가거나, 자신이 선택한 메뉴를 다시 선택해서 보거나.
        key3 = input("월별 꽃축제를 알 수 있는 메뉴입니다-!! 알고싶은 월을 입력해주세요!!(예시-1월) : ")
        for s in dict_festival[key3]:
            print(s)

        num = int(input("다른 꽃축제도 알아보시겠습니까? 0 : NO 1 : YES"))
        if num == 1:
            continue
        else:
            num2 = int(input("알아낸 축제를 리스트에 저장하고 싶습니까-? 0 : No 1 : Yes"))
            if num2 == 1:
                name = input("이름을 입력하세요")
                a = FestList(name)
                print("전체 축제리스트를 확인하세요")
                for key, value in dict_festival.items():
                    print(key, "축제 :", end=" ")
                    for j in value:
                        print(j + ",", end=" ")
                    print()
                tmplist = []  # 파일처리를 위해 빈 리스트를 생성해준다.

                try:  # 에러 처리. -> 파일처리로 흥미있는 월을 저장하고 불러올 수 있다.
                    while True:
                        num1 = input("흥미있는 월을 입력하세요. 중단하고 싶으면 0을 누르세요") + "월"
                        if num1 == "0월":
                            break
                        for j in range(len(dict_festival[num1])):
                            k = str(num1 + " " + dict_festival[num1][j])
                            tmplist.append(k)
                    a.listMake(tmplist)
                    print("메모장이 생성되었습니다. 바탕화면에서 확인하세요")
                    select_menu()
                except KeyError:
                    print("잘못된 형식으로 입력하셨습니다. 1월에서 12월 사이로, 오타 없이 입력해주세요.")
                else:
                    returnMain()
            else:
                print("메인메뉴로 돌아갑니다.")
                select_menu()
def flower_story(): # 꽃 이야기를 보여주는 함수
    dict_Story = {
        "개나리": ["옛날 인도에 새를 좋아하는 공주가 있었습니다.",
                "공주에게는 아주 아름다운 새장이 하나 있었습니다.",
                "공주는 이 새장에 어울릴 만큼 아름다운 새를 갖는 것이 소원이었습니다.",
                "그러던 어느 날이었습니다. 한 늙은이가 손에 예쁜새를 들고 공주를 찾아왔습니다.",
                "늙은이는 그 새를 공주 앞에 내밀었습니다. 공주는 기뻐하며 늙은이로부터 새를 받아들었습니다.",
                "그리고 그 새를 새장 안에 넣었습니다. 그러나 며칠이 지나자 새의 색깔이 점점 변하고 울음 소리도 이상해졌습니다.",
                "공주는 새의 몸을 물로 깨끗이 씻어 주었습니다. 그런데 이게 어찌 된 일입니까?",
                "목욕을 끝내고 보니 흉측한 까마귀가 아니겠습니까. 공주는 자신이 속은 것을 깨닫고 분해서 견딜 수가 없었습니다.",
                "너무 속이 상한 공주는 화병으로 결국 죽고 말았습니다.",
                "죽은 공주의 넋은 가지를 뻗어 금빛 장식이 달린 새장과 닮은 꽃으로 피어났습니다.",
                "이 꽃이 바로 '개나리＇입니다."],

        "나리": ["옛날 한 마을에 한 아리따운 처녀가 살고 있었습니다.",
            "그 고을에는 행동거지가 아주 나쁜 고을 원님의 아들이 있었는데",
            "아버지의 권세를 믿고 모든 악행은 다 저지르고 다녔습니다.",
            "원님아들은 그 처녀를 보고 첫눈에 반해 버렸습니다.",
            "어느날 그녀를 강제로 희롱하려 했으나 처녀가 끝내 자결로서 순결을 지켜,",
            "결국 그 처녀를 죽이고 말았습니다.",
            "이후 원님아들은 자신의 잘못을 반성하고 그녀를 양지 바른곳에 묻어 주었는데",
            "훗날 그 무덤위에 한송이가 피어났다고 합니다",
            "원님 아들은 그 꽃을 거두어 자신이 고이 길렀는데 이 꽃이 나리꽃입니다."],

        "난초": ["인도의 신 '부랴마'에게는 '비시누'라는 아들이 있었습니다.",
            "착한 일을 하기 위해 땅에 내려온 '비시누'는 인도를 돌아다니며 자기가 도와줄 사람을 찾고 있었습니다.",
            "그러던 어느 날 '비시누'는 한 소녀를 발견하였습니다. 시름에 겨운 소녀는 이슬에 젖은 꽃잎처럼 예쁘고 아름다웠습니다.",
            "'나는 길을 가는 늙은 나그네로 이름은 비시누요. 아가씨는 무엇 때문에 그렇게 슬픈 얼굴을 하고 있습니까?'",
            "'저는 나쟈나 공주입니다. 아버지께서 신분이 다르다고 성의 문지기인 그이와의 결혼을 승낙하시지 않습니다.'",
            "'이런, 딱한 일이군요.' 노인은 곧 젊은 문기지를 찾아갔습니다.",
            "'저 강을 건너 산 속에 제일 큰 느티나무가 있을 것이오. 그 아래 피어 있는 꽃을 따다 임금님께 바치시오.'",
            "젊은 문지기는 그 꽃을 찾아 멀고 험한 길을 떠났습니다.",
            "그가 목숨을 걸고 꽃을 찾는 동안 나쟈나 공주는 이유없이 무서운 병에 걸려 위독했습니다.",
            "임금의 사랑하는 딸의 목숨은 시간을 다투었습니다.",
            "그리하여 임금은 공주의 병을 고쳐주는 사람에겐 무슨 소원이든지 들어주겠다고 약속했습니다.",
            "햇빛이 찬란한 어느 아침, 젊은 문지기가 한 송이 꽃을 들고 나타나 오랫동안 감겨져 있던 공주의 눈을 뜨게 했습니다.",
            "젊은이의 소원은 나쟈나 공주와 결혼하는 것이었고, 임금님은 약속을 지켰습니다.",
            "그들을 하나가 될 수 있게 해준 꽃이 바로 난초입니다."],

        "매화": ["옛날 중국 산동 지방에 '용래'라는 청년이 있었는데,",
            "불행하게도 약혼한지 3일만에 그만 약혼녀가 몹쓸 병에 걸려 죽게 되었습니다.",
            "용래는 너무나도 슬퍼 매일 약혼녀 무덤에서 울었습니다.",
            "그의 약혼녀에 대한 사랑과 그리움에 하늘도 감동을 하였는지",
            "그의 눈물이 떨어진 자리에 나무가 한 그루 돋아 났습니다.",
            "용래는 그 나무를 집으로 가져와서 마당에 심고 약혼녀의 넋이라 생각하고",
            "일생 그 나무를 바라보며 살았습니다.",
            "그리고 그가 늙어 죽어서는 한 마리 새가 되어 나무를 떠나지 않았습니다.",
            "훗날 약혼녀 무덤에서 핀 나무를 '매화나무'라 하였고,",
            "매화나무 곁을 떠나지 않고 늘 곁에 있었던 새를 '휘파람새'라 하였습니다."],

        "모란": ["부귀와 영화를 상징하는 모란꽃은 다른 꽃처럼 요염한 향기를 갖지 못한 꽃입니다.",
            "이 꽃에는 신라 선덕여왕의 예지가 담겨져 전합니다.",
            "신라가 당과 친교할 때 왕은 당나라에 귀한 물건들을 선물하곤 하였습니다.",
            "당나라에서도 여기에 보답하는 뜻으로 비단과 꽃, 그림등을 보내왔습니다.",
            "선덕여왕이 공주로 있을때, 당나라에서 꽃씨를 보내왔는데",
            "그 꽃씨를 설명하는 꽃그림도 같이 보내왔습니다.",
            "꽃 그림을 본 공주는 '꽃은 아름다운데 향기가 없겠구나.'하고 말했습니다.",
            "부왕이 하도 신기해서 어떻게 아느냐고 묻자,",
            "'꽃 그림에 나비와 벌이 없지 않습니까?' 하고 대답하는게 아닌가?",
            "훗날, 꽃씨가 자라 꽃이 피었는데 과연 향기가 없는 모란꽃이었답니다."],
              
        "무궁화": ["옛날 북부 지방에 있는 어느 한 산간 마을에 글 잘 쓰고 노래를 잘하는 아주 예쁘게 생긴 여자가 살고 있었습니다.",
            "많은 사람들은 이 여자의 재주를 칭송했고 귀여워해 주었습니다. 그런데 이 여자의 남편은 앞을 보지 못하는 장님이었습니다.",
            "여자는 남편을 매우 사랑하였습니다. 언제나 지극 정성으로 앞을 보지 못하는 남편을 돌보았습니다.",
            "제아무리 돈많고 권세있는 사람들이 여자를 유혹하여도 조금도 흔들리지 않았습니다.",
            "그러던 어느 날 그 마을을 다스리던 성주가 그녀의 재주와 미모에 반해 그녀를 유혹하였습니다.",
            "그러나 그녀는 여전히 한결같은 마음으로 남편을 돌볼 뿐이었습니다.",
            "애를 태우던 성주는 마침내 부하를 보내 강제로 그녀를 잡아들이고 말았습니다.",
            "그리고는 온갖 수단과 방법을 가리지 않고 그녀의 마음을 돌리려 하였습니다.",
            "그러나 그녀는 끝까지 성주의 말을 듣지 않았습니다.",
            "성주는 화가 나서 단숨에 칼로 그녀의 목을 잘라 버리고 말았습니다.",
            "그녀가 죽은 뒤 성주는 그녀의 절개에 감탄하여 그녀의 시체를 남편이 살고 있는 집안 뜰 앞에 묻어 주었습니다.",
            "그 후 그 무덤에서 꽃이 피어났는데 이 꽃나무는 자라고 자라서 집을 온통 둘러쌌습니다.",
            "마치 장님인 남편을 감싸 주려는 듯이 울타리가 되었습니다.",
            "동네 사람들은 이 꽃을 울타리 꽃이라고 불렀습니다. 그리고 이 울타리 꽃이 '무궁화'입니다"]
    }




    while True: # 메인함수로 돌아가거나, 자신이 선택한 메뉴를 다시 선택해서 보거나.
        print("꽃 이야기 리스트입니다-!!") # 꽃 이야기 리스트를 실행한다.
        for r in dict_Story.keys():
            print(r, end=" ")
        print()
        key4 = input("이야기가 보고 싶은 꽃을 골라주세요-!!") # 원하는 꽃 이야기의 이름을 적으면 볼 수 있다.
        for l in dict_Story[key4]:
            print(l)

        num = int(input("다른 이야기도 알아보시겠습니까? 0 : NO 1 : YES"))
        if num == 1:
            continue
        else:
            returnMain()
def flower_quiz(): # 꽃 퀴즈 프로그램 - 문제를 보고 4가지 중 답을 골라 적는 방식의 퀴즈 프로그램
    li = []

    def Quiz3():
        choice = []
        q3 = '3.이 꽃의 이름을 적어주세요-!!(예시:호야꽃  -번호 적지 마세요-!!)\n꿀로 가득한 너는\n지혜와 정성으로 사랑을 품어주는구나\n보랏빛을 은은하게 풍기며,\n달빛과 함께 자리를 지키고 있구나.\n1번: 샐비아 2번: 매화 3번: 동백 4번: 산다화'
        print(q3)
        choice.append("샐비아")
        choice.append("매화")
        choice.append("동백")
        choice.append("산다화")

        while True:
            a = input('\n맞는 꽃이름을 적어주세요')
            if a == choice[0]:
                quiz3 = int(input('축하드립니다-!! 전부 맞추셨어요-! 꽃게임이 끝이 났습니다. 메인 화면으로 돌아가시겠습니까? 0:No 1:Yes'))
                if quiz3 == 1:
                    select_menu()
                elif quiz3 == 0:
                    print("감사합니다-! 다음에 또 놀러와주세요~^^ 프로그램을 종료합니다-!")
                    exit

            else:
                print('아쉽지만 정답을 맞추지 못하셨습니다 ㅠㅠ 다시 도전해주세요-!!')
                continue

    def Quiz2():
        choice = []
        q2 = '2.이 꽃의 이름을 적어주세요-!!(예시:호야꽃  -번호 적지 마세요-!!)\n고독한 사랑과 아름다운 사랑으로 인해서\n너는 별이 되어 빛이 나고 있구나.\n진한 향기와 함께 옹기종기 모여 아름다움을 빛내고 있는 그 꽃들은\n덩굴로 무언가를 감싸 안아주는구나.\n1번: 벚꽃 2번: 금잔화 3번: 달리아 4번: 호야꽃'
        print(q2)
        choice.append("벚꽃")
        choice.append("금잔화")
        choice.append("달리아")
        choice.append("호야꽃")
        while True:
            a = input('\n맞는 꽃이름을 적어주세요')
            if a == choice[3]:
                quiz = int(input('축하드립니다-!! 정답을 맞추셨어요! 다음 문제도 풀어보실까요-?(0: No, 1: Yes)'))
                if quiz == 1:
                    Quiz3()
                else:
                    print("메인 메뉴로 돌아갑니다- 다음에 또 들러주세요~~!!!")
                    select_menu()
            else:
                print('아쉽지만 정답을 맞추지 못하셨습니다 ㅠㅠ 다시 도전해주세요-!!')
                continue

    def Quiz1():

        choice = []
        q1 = '1.이 꽃의 이름을 적어주세요-!!(예시:호야꽃  -번호 적지 마세요-!!)\n넌 젖을수록 투명해지는 꽃 \n투명하지만 사라지지 않아.\n아아 이슬에 젖어가는구나. \n시간이 지나 흰 꽃잎들도 투명해진 기억없이 시들어가겠지.\n1번: 호야꽃 2번: 샐비아 3번: 산하엽 4번: 매화'
        print(q1)
        choice.append("호야꽃")
        choice.append("샐비아")
        choice.append("산하엽")
        choice.append("매화")
        while True:
            a = input('\n맞는 꽃이름을 적어주세요')
            if a == choice[2]:
                quiz = int(input('축하드립니다-!! 정답을 맞추셨어요! 다음 문제도 풀어보실까요-?(0: No, 1: Yes)'))
                if quiz == 1:
                    Quiz2()
                else:
                    print("메인 메뉴로 돌아갑니다- 다음에 또 들러주세요~~!!!")
                    select_menu()
            else:
                print('아쉽지만 정답을 맞추지 못하셨습니다 ㅠㅠ 다시 도전해주세요-!!')
                continue

    num9 = int(input("꽃퀴즈 메뉴입니다-!! 꽃퀴즈는 계절별 꽃 관련 페이지를 보고 오셔야 풀 수 있습니다. 문제를 풀어보시겠습니까-?(0: No 1: Yes)"))
    if num9 == 1:
        Quiz1()
    else:
        print("메인 메뉴로 돌아갑니다.")
        select_menu()
def flower_game():     #메인 메뉴에서 4를 눌렀을 때 들어오는 행맨게임 함수. 꽃이름 맞추기 프로그램
    def Lives(Incorrect):   # 철자를 입력할 때마다 기회가 몇 번 남았는지 알려주는 함수
           LivesLeft = IncorrectLimit - Incorrect
           print("남은 생명은", LivesLeft, "입니다-!!")

    def PicNo(Incorrect): # 사용자가 철자를 잘못 입력하였을 시 그림을 그리는 함수
           if Incorrect == 1:
               print(a)
           if Incorrect == 2:
               print(b)
           if Incorrect == 3:
               print(c)
           if Incorrect == 4:
               print(d)
           if Incorrect == 5:
               print(e)
           if Incorrect == 6:
               print(f)
           if Incorrect == 7:
               print(g)

    def Hint(Incorrect, WordChoice): # 마지막 두 가지 추측에 도달하면 힌트를 출력하는 함수
           if Incorrect == 6:
               WordChoice = list(WordChoice)
               WordHint = random.choice(WordChoice)   # 랜덤으로 맞출 단어의 들어가 있는 철자를 힌트로 알려준다.
               WordChoice = "".join(WordChoice)
               print("이 단어에 들어가 있는 철자는 : ", WordHint, "입니다!!")

    List1 = ["nari", "dalia", "penzi", "orchid", "moran"] # 맞출 단어들 정의
    IncorrectLimit = 7 # 단어 제한 : 7
    Infinity = 9999999999999999999999999999999999 # 루프 설정 양
    a = ('''
         +---+
         |   |
             |
             |
             |
             |
    ==========''')
    b = ('''
         +---+
         |   |
         O   |
             |
             |
             |
    ==========''')
    c = ('''
         +---+
         |   |
         O   |
         |   |
             |
             |
    ==========''')
    d = ('''
         +---+
         |   |
         O   |
        /|   |
             |
             |
    ==========''')
    e = ('''
         +---+
         |   |
         O   |
        /|\  |
             |
             |
    ==========''')
    f = ('''
         +---+
         |   |
         O   |
        /|\  |
        /    |
             |
    ==========''')
    g = ('''
         +---+
         |   |
         O   |
        /|\  |
        / \  |
             |
    ==========''') # 실수했을 때마다 그려지는 단계별 그림


    Incorrect = 0 # 초기화
    List2 = [] # 빈 리스트


    # 시작 - 메인메뉴 : 위 함수들을 이용해서 게임을 돌린다.

    print("꽃 단어로 하는 재미있는 행맨 게임-!!") # 게임 시작 타이틀

    input("\"Enter\" 를 누르면 게임을 시작합니다-!! 모두 시작해 보세요-!!" + "\n")

    # 본격적으로 게임 시작


    for i in range(Infinity):
           WordChoice = (random.choice(List1)) # 랜덤으로 미리 생성한 List1에서 단어를 1개 선택하는 기능.
           LetterCount = len(WordChoice) # 단어의 철자 개수를 세는 기능.
           print("-------[새 게임 Start-!!]-------\n")
           print("이 글자는", LetterCount, "글자 입니다-!!") # 랜덤으로 맞출 단어의 개수를 힌트로 알려준다.

           if LetterCount == 1: # 랜덤으로 지정된 단어(맞출 단어) 철자 인쇄(나열)
               L = ("_")
               print(L.replace("", " ")[1: -1], "\n")
           if LetterCount == 2:
               L = ("__")
               print(L.replace("", " ")[1: -1], "\n")
           if LetterCount == 3:
               L = ("___")
               print(L.replace("", " ")[1: -1], "\n")
           if LetterCount == 4:
               L = ("____")
               print(L.replace("", " ")[1: -1], "\n")
           if LetterCount == 5:
               L = ("_____")
               print(L.replace("", " ")[1: -1], "\n")
           if LetterCount == 6:
               L = ("______")
               print(L.replace("", " ")[1: -1], "\n")
           if LetterCount == 7:
               L = ("_______")
               print(L.replace("", " ")[1: -1], "\n")
           if LetterCount == 8:
               L = ("________")
               print(L.replace("", " ")[1: -1], "\n")
           if LetterCount == 9:
               L = ("_________")
               print(L.replace("", " ")[1: -1], "\n")
           if LetterCount == 10:
               L = ("__________")
               print(L.replace("", " ")[1: -1], "\n")

           GuessList = list(L) # 선택된 (랜덤) 단어를 목록으로
           LivesLeft = IncorrectLimit - Incorrect   # 철자를 쓸 때마다 남은 목숨(기회) 횟수

           for i in range(Infinity): # 다음 삽입된 코드 열기
               if GuessList == WordChoice:
                   break

               Hint(Incorrect, WordChoice) # 힌트 사용자 지정 가능

               for i in range(Infinity): # 철자 관련 제약
                   world1 = input("철자를 선택해주세요-!!: ")
                   GuessLength = len(world1)
                   if GuessLength > 1:
                       print("한 글자 이상을 선택하셨거나 형식에 맞지 않게 잘못 입력하셨습니다. 다시 입력해주세요") # 만약 선택한 철자가 형식에 맞지 않을 경우
                   elif world1 == "":
                       print("무조건 한 글자를 입력해주세요. 글자가 입력되지 않았습니다.") # 만약 한 글자도 입력하지 않았을 경우
                   else:
                       break

               world1 = world1.lower()   # 입력을 소문자 문자열로 변경
               List2.append(world1)  # 빈 리스트였던 List2에 사용자가 선택한 단어 저장

               if WordChoice.find(world1) >= 0: # 추측해서 선택한 철자가, 맞춰야 할 단어 안에 있는지 확인
                   GuessList = list(GuessList)

                   for x, y in enumerate(WordChoice): # 맞춰야 할 철자와 사용자가 입력한 철자 비교
                       if world1 == y:
                           GuessList[x] = y
                   print("철자", world1.upper(), "는 맞습니다-!! 추측에 성공하였습니다.") # 맞춰야 할 단어 안에 사용자가 선택한 철자가 있을 경우
                   GuessList = "".join(GuessList) # 문자열 다시 설정

               else:
                   Incorrect += 1 # 틀렸을 때
                   print("틀렸습니다ㅠㅠ.")
                   GuessList = "".join(GuessList) # 문자열로 다시 설정
                   PicNo(Incorrect) # 사용자 지정 가능
                   Lives(Incorrect) # 사용자 지정 가능

               List2 = "".join(List2) # 문자열로 다시 설정
               print("선택한 철자: ", List2.upper()) # 사용자가 선택한 철자 프린트
               List2 = list(List2)
               List2.append(", ")
               print(GuessList.replace("", " ")[1: -1], "\n") # GuessList를 공백으로

               if GuessList == WordChoice: # 사용자가 게임에 졌는지 이겼는지 판별
                   print("축하드립니다-!! 게임에 승리하셨어요-!! 캐릭터가 살아남았습니다.")
                   Incorrect = 0
                   List2 = []
                   GuessList = []
                   NewGame = input("다시 한 번 게임을 즐겨 보시겠어요-? (y or n): \n")
                   if NewGame == "y":
                       break
                   else:
                       returnMain()

               if Incorrect == 7: # 사용자가 게임에 졌는지 이겼는지 판별.
                   print("앗, 패배하였습니다 ㅠㅠ 캐릭터가 사망했어요...")
                   print("맞춰야 할 단어는 ", WordChoice + "였습니다 ㅠㅠ")
                   Incorrect = 0
                   List2 = []
                   GuessList = []
                   NewGame = input("다시 한 번 게임을 즐겨 보시겠어요-? (y or n) : \n")
                   if NewGame == "y":
                       break
                   else:
                       returnMain()

def returnMain(): # 원할 때마다 언제든지 메인 메뉴로 돌아갈 수 있는 함수
    num = int(input("메인 메뉴로 돌아가시겠습니까? 0 : No 1 : Yes ")) #메인 메뉴(첫 화면)으로 돌아갈 지 물어본다.
    if num == 1: #1을 눌렀을 때, 메인 메뉴(첫 화면)으로 돌아간다.
        select_menu() #메인 메뉴(첫 화면)으로 돌아가는 명령어
    elif num==0:
        print("프로그램을 종료합니다")
        quit()
    else:
        print("잘못 누르셨습니다. 프로그램을 종료합니다") #0과 1 이외 다른 버튼을 누르면 프로그램을 종료한다.
        quit()

select_menu() # 메인화면 함수 호출